{"version":3,"sources":["element-components/NavBar.jsx","element-components/CategoryBar.jsx","utils/api.js","element-components/DisplayCommentsBox.jsx","utils/helper-functions.js","element-components/CurrentReviewBody.jsx","element-components/CommentInputBox.jsx","page-components/CommentsPage.jsx","element-components/ReviewBody.jsx","page-components/ReviewsPage.jsx","element-components/SignInBox.jsx","page-components/SignInPage.jsx","element-components/NewReviewForm.jsx","page-components/NewReviewPage.jsx","App.js","index.js"],"names":["handleSignOut","localStorage","removeItem","NavBar","Navbar","id","collapseOnSelect","bg","variant","expand","Container","fluid","Row","Col","Brand","href","icon","faChessKnight","className","Toggle","Collapse","Nav","Link","onClick","CategoryBar","categories","currentUser","faBars","Text","gamesApi","axios","create","baseURL","getReviews","sortBy","category","get","params","sort_by","then","response","data","reviews","getComments","review_id","comments","patchReview","incVotes","patch","inc_votes","removeReview","delete","catch","err","console","dir","DisplayCommentsBox","setComments","useState","setErr","useEffect","results","deleteComment","e","preventDefault","comment_id","currentTarget","value","log","removeComment","src","alt","map","comment","index","author","body","hidden","faTrashAlt","CurrentReview","currentReview","setCurrentReview","newReviewLikes","setNewReviewLikes","voted","setVoted","isLoading","setIsLoading","review","getCurrentReview","Spinner","animation","title","review_img_url","review_body","Date","created_at","toLocaleDateString","timeZone","owner","disabled","faThumbsUp","faThumbsDown","votes","CommentInputBox","commentInput","setCommentInput","Accordion","Item","eventKey","Header","active","Body","Form","onSubmit","post","username","uploadComments","result","Control","as","placeholder","required","onChange","target","Button","type","CommentsPage","useParams","md","ReviewBody","setReviews","setSortBy","deleteReview","a","Select","defaultValue","to","Card","style","width","Img","ListGroup","slice","ListGroupItem","ReviewsPage","SignInBox","setCurrentUser","users","userInput","setUserInput","history","useHistory","user","includes","setItem","push","needToSignUp","SignInPage","setUsers","NewReviewForm","image","manufacturer","reviewInput","setReviewInput","submitNewReview","setSubmitNewReview","designer","postReview","Group","currentInput","tempInput","rows","slug","window","location","reload","NewReviewPage","App","setCategories","prevLoggedInUser","getItem","exact","path","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.0d928acc.chunk.js","sourcesContent":["import \"../component-css/NavBar.css\";\nimport Navbar from \"react-bootstrap/Navbar\";\nimport Nav from \"react-bootstrap/Nav\";\nimport Row from \"react-bootstrap/Row\";\nimport Col from \"react-bootstrap/Col\";\nimport Container from \"react-bootstrap/Container\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faChessKnight } from \"@fortawesome/free-solid-svg-icons\";\n\nconst handleSignOut = () => {\n  localStorage.removeItem(\"loggedInUser\");\n};\n\nfunction NavBar() {\n  return (\n    <Navbar\n      id=\"primary-navbar\"\n      collapseOnSelect\n      bg=\"dark\"\n      variant=\"dark\"\n      expand=\"sm\"\n    >\n      <Container fluid>\n        <Row>\n          <Col>\n            <Navbar.Brand id=\"brand\" href=\"/reviews\">\n              <span id=\"left-brand\">Bored?</span> Reviews\n              <FontAwesomeIcon id=\"icon\" icon={faChessKnight} />\n            </Navbar.Brand>\n          </Col>\n          <Col className=\"second-col\">\n            <Navbar.Toggle id=\"hamburger-menu\" />\n            <Navbar.Collapse id=\"responsive-navbar-nav\">\n              <Nav>\n                <Nav.Link href=\"/reviews\">Reviews</Nav.Link>\n                <Nav.Link href=\"/newreview\">Post Review</Nav.Link>\n                <Nav.Link href=\"/\" onClick={handleSignOut}>\n                  Sign-out\n                </Nav.Link>\n              </Nav>\n            </Navbar.Collapse>\n          </Col>\n        </Row>\n      </Container>\n    </Navbar>\n  );\n}\n\nexport default NavBar;\n","import Nav from \"react-bootstrap/Nav\";\nimport NavBar from \"react-bootstrap/NavBar\";\nimport Container from \"react-bootstrap/Container\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faBars } from \"@fortawesome/free-solid-svg-icons\";\nimport \"../component-css/CategoryBar.css\";\n\nfunction CategoryBar({ categories, currentUser }) {\n  return (\n    <NavBar id=\"secondary-navbar\" collapseOnSelect expand=\"lg\">\n      <Container id=\"secondary-nav-container\">\n        <NavBar.Toggle\n          id=\"navbar-toggler\"\n          aria-controls=\"responsive-navbar-nav\"\n        >\n          <span>\n            Select Review Category\n            <FontAwesomeIcon id=\"icon\" icon={faBars} />\n          </span>\n        </NavBar.Toggle>\n        <NavBar.Collapse id=\"responsive-navbar-nav-cat\">\n          <Nav id=\"navbar-nav\">\n            <NavBar.Text id=\"categories-label\">Review Categories :</NavBar.Text>\n            <Nav.Link\n              className=\"secondary-navlinks\"\n              key=\"1\"\n              href={`/reviews/strategy`}\n            >\n              Strategy\n            </Nav.Link>\n            <Nav.Link\n              className=\"secondary-navlinks\"\n              key=\"2\"\n              href={`/reviews/hidden-roles`}\n            >\n              Hidden-Roles\n            </Nav.Link>\n            <Nav.Link\n              className=\"secondary-navlinks\"\n              key=\"3\"\n              href={`/reviews/dexterity`}\n            >\n              Dexterity\n            </Nav.Link>\n            <Nav.Link\n              className=\"secondary-navlinks\"\n              key=\"4\"\n              href={`/reviews/push-your-luck`}\n            >\n              Push Your Luck\n            </Nav.Link>\n            <Nav.Link\n              className=\"secondary-navlinks\"\n              key=\"5\"\n              href={`/reviews/roll-and-write`}\n            >\n              Roll And Write\n            </Nav.Link>\n            <Nav.Link\n              className=\"secondary-navlinks\"\n              key=\"6\"\n              href={`/reviews/deck-building`}\n            >\n              Deck Building\n            </Nav.Link>\n            <Nav.Link\n              className=\"secondary-navlinks\"\n              key=\"7\"\n              href={`/reviews/engine-building`}\n            >\n              Engine Building\n            </Nav.Link>\n          </Nav>\n        </NavBar.Collapse>\n        <small id=\"profile-username\">Signed in as : {currentUser}</small>\n      </Container>\n    </NavBar>\n  );\n}\n\nexport default CategoryBar;\n","import axios from \"axios\";\n\nconst gamesApi = axios.create({\n  baseURL: \"https://nc-board-games.herokuapp.com/api\",\n});\n\nexport const getCategories = () => {\n  return gamesApi.get(\"/categories\").then((response) => {\n    return response.data.categories;\n  });\n};\n\nexport const getReviews = (sortBy, category) => {\n  return gamesApi\n    .get(\"/reviews\", {\n      params: {\n        category: category,\n        sort_by: sortBy,\n      },\n    })\n    .then((response) => {\n      return response.data.reviews;\n    });\n};\n\nexport const getComments = (review_id) => {\n  return gamesApi.get(`/reviews/${review_id}/comments`).then((response) => {\n    return response.data.comments;\n  });\n};\n\nexport const getCurrentReview = (review_id) => {\n  return gamesApi.get(`reviews/${review_id}`).then((response) => {\n    return response.data.review;\n  });\n};\n\nexport const getUsers = () => {\n  return gamesApi.get(\"/users\").then((response) => {\n    return response.data.result;\n  });\n};\n\nexport const uploadComments = (commentInput, currentUser, review_id) => {\n  return gamesApi.post(`/reviews/${review_id}/comments`, {\n    username: currentUser,\n    body: commentInput,\n  });\n};\n\nexport const patchReview = (review_id, incVotes) => {\n  return gamesApi.patch(`/reviews/${review_id}`, { inc_votes: incVotes });\n};\n\nexport const patchComment = (comment_id) => {\n  return gamesApi\n    .patch(`/comments/${comment_id}`, { inc_votes: 1 })\n    .then((result) => {\n      console.log(result);\n    })\n    .catch((err) => {});\n};\n\nexport const postReview = (reviewInput, currentUser) => {\n  const { title, image, body, category, manufacturer } = reviewInput;\n  return gamesApi.post(`/reviews`, {\n    title: `${title}`,\n    designer: `${manufacturer}`,\n    owner: `${currentUser}`,\n    review_img_url: `${image}`,\n    review_body: `${body}`,\n    category: `${category}`,\n  });\n};\n\nexport const removeComment = (comment_id) => {\n  return gamesApi\n    .delete(`/comments/${comment_id}`)\n    .then(() => {})\n    .catch((err) => {\n      console.log(err);\n    });\n};\n\nexport const removeReview = (review_id) => {\n  return gamesApi\n    .delete(`/reviews/${review_id}`)\n    .then(() => {})\n    .catch((err) => {\n      console.dir(err);\n    });\n};\n\nexport const getProfile = (currentUser) => {\n  return gamesApi.get(`/users`).then((results) => {\n    return results.filter((user) => {\n      return user.username === currentUser;\n    });\n  });\n};\n","import { useState, useEffect } from \"react\";\nimport { getComments, removeComment } from \"../utils/api\";\nimport { errorMsg } from \"../utils/helper-functions\";\nimport \"../component-css/CommentDisplayBox.css\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faTrashAlt } from \"@fortawesome/free-solid-svg-icons\";\n\nfunction DisplayCommentsBox({ review_id, currentUser, comments, setComments }) {\n  const [err, setErr] = useState(false);\n\n  useEffect(() => {\n    setErr(false);\n    getComments(review_id)\n      .then((results) => {\n        setComments(results);\n      })\n      .catch((err) => {\n        setErr(true);\n      });\n  }, [review_id, setComments]);\n\n  const deleteComment = (e) => {\n    e.preventDefault();\n    const comment_id = e.currentTarget.value;\n    console.log(comment_id);\n\n    removeComment(comment_id)\n      .then(() => {\n        return getComments(review_id);\n      })\n      .then((results) => {\n        setComments(results);\n      });\n  };\n\n  if (err) return errorMsg();\n\n  return (\n    <div id=\"comments-box\">\n      <p id=\"comments-box-heading\">Comments</p>\n      {comments.map((comment, index) => {\n        return (\n          <section id=\"comment-container\" key={index}>\n            <p id=\"dc-heading\">{comment.author}</p>\n            <p id=\"dc-comment-body\">{comment.body}</p>\n\n            <button\n              id=\"dc-delete\"\n              value={comment.comment_id}\n              onClick={deleteComment}\n              hidden={comment.author === currentUser ? false : true}\n            >\n              <FontAwesomeIcon id=\"review-icon\" icon={faTrashAlt} />\n            </button>\n          </section>\n        );\n      })}\n    </div>\n  );\n}\n\nexport default DisplayCommentsBox;\n","export const errorMsg = () => {\n  return (\n    <div className=\"error-page\">\n      <p>Page cannot be found... please try again</p>\n      <img\n        src=\"https://images.unsplash.com/photo-1579373903781-fd5c0c30c4cd?ixid=MnwxMjA3fDB8MHxzZWFyY2h8M3x8ZXJyb3J8ZW58MHx8MHx8&ixlib=rb-1.2.1&auto=format&fit=crop&w=800&q=60\"\n        alt=\"error page not found\"\n      ></img>\n    </div>\n  );\n};\n\nexport const getProfile = (username, users) => {\n  const filterUser = users.filter((user) => {\n    return user.username === username;\n  });\n  return filterUser;\n};\n","import { useEffect, useState } from \"react\";\nimport { getCurrentReview, patchReview } from \"../utils/api\";\nimport \"../component-css/CurrentReviewBody.css\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faThumbsUp, faThumbsDown } from \"@fortawesome/free-solid-svg-icons\";\nimport Spinner from \"react-bootstrap/Spinner\";\n\nfunction CurrentReview({ review_id }) {\n  const [currentReview, setCurrentReview] = useState({});\n  const [newReviewLikes, setNewReviewLikes] = useState(0);\n  const [voted, setVoted] = useState(false);\n  const [isLoading, setIsLoading] = useState(true);\n  // const [err, setErr] = useState(false);\n\n  useEffect(() => {\n    // setErr(false);\n    setIsLoading(true);\n    getCurrentReview(review_id)\n      .then((results) => {\n        setCurrentReview(results);\n        setIsLoading(false);\n      })\n      .catch((err) => {\n        // setErr(true);\n      });\n  }, [review_id, setIsLoading]);\n\n  const likeReview = () => {\n    setVoted(true);\n    const incVotes = 1;\n    setNewReviewLikes((newReviewLikes) => newReviewLikes + 1);\n    patchReview(review_id, incVotes);\n  };\n\n  const dislikeReview = () => {\n    setVoted(true);\n    const incVotes = -1;\n    setNewReviewLikes((newReviewLikes) => newReviewLikes - 1);\n    patchReview(review_id, incVotes);\n  };\n\n  if (isLoading) {\n    return (\n      <Spinner\n        className=\"loading-icon\"\n        animation=\"border\"\n        variant=\"primary\"\n      ></Spinner>\n    );\n  } else {\n    return (\n      <section id=\"cr\">\n        <div id=\"current-review-body\">\n          <p id=\"cr-title\">{currentReview.title}</p>\n          <div id=\"cr-main-body\">\n            <img\n              id=\"cr-img\"\n              src={currentReview.review_img_url}\n              alt=\"review\"\n            ></img>\n            <p id=\"cr-body\">{currentReview.review_body}</p>\n            <p id=\"cr-date\">\n              {new Date(currentReview.created_at).toLocaleDateString(\"en-GB\", {\n                timeZone: \"UTC\",\n              })}\n            </p>\n            <p id=\"cr-owner\">{currentReview.owner}</p>\n            <div id=\"cr-info\">\n              <button\n                className={voted ? \"liked\" : \"like\"}\n                disabled={voted}\n                onClick={likeReview}\n              >\n                <FontAwesomeIcon id=\"thumbs-up\" icon={faThumbsUp} />\n              </button>\n              <button\n                className={voted ? \"liked\" : \"like\"}\n                disabled={voted}\n                onClick={dislikeReview}\n              >\n                <FontAwesomeIcon id=\"thumbs-down\" icon={faThumbsDown} />\n              </button>\n              <p id=\"cr-votecount\">\n                Likes {currentReview.votes + newReviewLikes}\n              </p>\n            </div>\n          </div>\n        </div>\n      </section>\n    );\n  }\n}\n\nexport default CurrentReview;\n","import { useState } from \"react\";\nimport { uploadComments } from \"../utils/api\";\nimport { getComments } from \"../utils/api\";\nimport Form from \"react-bootstrap/Form\";\nimport Button from \"react-bootstrap/Button\";\nimport Accordion from \"react-bootstrap/Accordion\";\nimport \"../component-css/CommentInputBox.css\";\n\nfunction CommentInputBox({ review_id, currentUser, setComments }) {\n  const [commentInput, setCommentInput] = useState(\"\");\n  const [err, setErr] = useState(false);\n\n  const handleSubmit = (e) => {\n    setErr(false);\n    e.preventDefault();\n    setCommentInput(\"\");\n    uploadComments(commentInput, currentUser, review_id)\n      .then(() => {\n        return getComments(review_id);\n      })\n      .then((result) => {\n        setComments(result);\n      })\n      .catch(() => {\n        setErr(true);\n      });\n  };\n\n  return (\n    <div id=\"comment-input-box\">\n      <Accordion>\n        <Accordion.Item id=\"ci-accordion-item\" eventKey=\"1\">\n          <Accordion.Header active=\"1\">Leave a Comment</Accordion.Header>\n          <Accordion.Body className=\"p-0 h-100\">\n            <Form className=\"h-100 secondary\" onSubmit={handleSubmit}>\n              <Form.Control\n                className=\"p-10 h-100\"\n                id=\"comment-textbox\"\n                as=\"textarea\"\n                value={commentInput}\n                placeholder=\"comment...\"\n                required\n                onChange={(e) => {\n                  setCommentInput(e.target.value);\n                }}\n              ></Form.Control>\n              <Button id=\"ci-submit\" type=\"submit\">\n                Submit\n              </Button>\n            </Form>\n          </Accordion.Body>\n        </Accordion.Item>\n      </Accordion>\n      <div>\n        {err ? <p>Error comment not uploaded, please try again..</p> : null}\n      </div>\n    </div>\n  );\n}\n\nexport default CommentInputBox;\n","import { useParams } from \"react-router\";\nimport { useState } from \"react\";\nimport DisplayCommentsBox from \"../element-components/DisplayCommentsBox\";\nimport CurrentReviewBody from \"../element-components/CurrentReviewBody\";\nimport CommentInputBox from \"../element-components/CommentInputBox\";\nimport Row from \"react-bootstrap/Row\";\nimport Col from \"react-bootstrap/Col\";\nimport Container from \"react-bootstrap/Container\";\n\nfunction CommentsPage({ currentUser }) {\n  const [comments, setComments] = useState([]);\n  const { review_id } = useParams();\n\n  return (\n    <>\n      <Container id=\"comments-page-container\">\n        <Row>\n          <Col md={7}>\n            <CurrentReviewBody review_id={review_id} />\n          </Col>\n          <Col id=\"cp-col2\" md={5}>\n            <CommentInputBox\n              review_id={review_id}\n              currentUser={currentUser}\n              comments={comments}\n              setComments={setComments}\n            />\n            <DisplayCommentsBox\n              review_id={review_id}\n              currentUser={currentUser}\n              comments={comments}\n              setComments={setComments}\n            />\n          </Col>\n        </Row>\n      </Container>\n    </>\n  );\n}\n\nexport default CommentsPage;\n","import { useEffect, useState } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { getReviews, removeReview } from \"../utils/api\";\nimport \"../component-css/ReviewBody.css\";\nimport Form from \"react-bootstrap/Form\";\nimport Card from \"react-bootstrap/Card\";\nimport ListGroup from \"react-bootstrap/ListGroup\";\nimport ListGroupItem from \"react-bootstrap/ListGroupItem\";\nimport Spinner from \"react-bootstrap/Spinner\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faChessKnight, faTrashAlt } from \"@fortawesome/free-solid-svg-icons\";\n\nfunction ReviewBody({ category, currentUser, setErr }) {\n  const [reviews, setReviews] = useState([]);\n  const [isLoading, setIsLoading] = useState(true);\n  const [sortBy, setSortBy] = useState(null);\n\n  useEffect(() => {\n    // setErr(false);\n    setIsLoading(true);\n    getReviews(sortBy, category)\n      .then((results) => {\n        setReviews(results);\n        setIsLoading(false);\n      })\n      .catch((err) => {\n        // setErr(true);\n      });\n  }, [category, sortBy, setErr]);\n\n  const handleSortBy = (e) => {\n    e.preventDefault();\n    setSortBy(e.target.value);\n  };\n\n  const deleteReview = async (e) => {\n    e.preventDefault();\n    const review_id = e.currentTarget.value;\n    removeReview(review_id)\n      .then(() => {\n        return getReviews(category, sortBy);\n      })\n      .then((result) => {\n        setReviews(result);\n        setIsLoading(false);\n      });\n  };\n\n  if (isLoading) {\n    return (\n      <Spinner\n        className=\"loading-icon\"\n        animation=\"border\"\n        variant=\"primary\"\n      ></Spinner>\n    );\n  } else {\n    return (\n      <div className=\"review-body\">\n        <section>\n          <Form.Select\n            id=\"sortby-form\"\n            defaultValue=\"selected\"\n            onChange={handleSortBy}\n          >\n            <option value=\"selected\" disabled={true}>\n              Sort-Reviews\n            </option>\n            <option value=\"created_at\">Date</option>\n            <option value=\"comment_count\">Comments</option>\n            <option value=\"votes\">Votes</option>\n          </Form.Select>\n        </section>\n        <section id=\"review-cards\">\n          <div id=\"review-header\">\n            <p id=\"header-logo\">\n              Bored? <span id=\"review-logo-right\">Reviews</span>\n              <FontAwesomeIcon id=\"review-icon\" icon={faChessKnight} />\n            </p>\n            <p id=\"review-description\">\n              Click on a review to read more, vote on the review or leave a\n              comment\n            </p>\n            <p id=\"post-review-prompt\">\n              Or post a <Link to=\"/newreview\">review</Link> of you own\n            </p>\n            {sortBy ? <p>Reviews sorted by {sortBy}</p> : null}\n          </div>\n          <div id=\"review-card-container\">\n            {reviews.map((review, index) => {\n              return (\n                <Link\n                  key={index}\n                  id=\"review-link\"\n                  to={`/comments/${review.review_id}`}\n                >\n                  <Card\n                    style={{ width: \"300px\" }}\n                    className=\"review-box\"\n                    id=\"individual-card\"\n                  >\n                    <Card.Header id=\"card-header\">{review.title}</Card.Header>\n                    <Card.Img\n                      variant=\"top\"\n                      src={review.review_img_url}\n                      alt=\"review\"\n                    ></Card.Img>\n                    <ListGroup>\n                      <Card.Text id=\"review-body\">\n                        Review: {`${review.review_body.slice(0, 50)}......`}\n                      </Card.Text>\n                      <ListGroupItem>Author: {review.owner}</ListGroupItem>\n                      <ListGroupItem>\n                        {review.category}{\" \"}\n                        <button\n                          id=\"delete-button\"\n                          value={review.review_id}\n                          onClick={deleteReview}\n                          hidden={review.owner === currentUser ? false : true}\n                        >\n                          <FontAwesomeIcon id=\"review-icon\" icon={faTrashAlt} />\n                          <small>delete review</small>\n                        </button>\n                      </ListGroupItem>\n                    </ListGroup>\n                  </Card>\n                </Link>\n              );\n            })}\n          </div>\n        </section>\n      </div>\n    );\n  }\n}\n\nexport default ReviewBody;\n","import ReviewBody from \"../element-components/ReviewBody\";\nimport { useParams } from \"react-router\";\n\nfunction ReviewsPage({ currentUser }) {\n  // const [err, setErr] = useState(false);\n\n  const { category } = useParams();\n\n  return (\n    <div>\n      <ReviewBody\n        category={category}\n        currentUser={currentUser}\n        // setErr={setErr}\n      />\n    </div>\n  );\n}\nexport default ReviewsPage;\n","import { useState } from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faChessKnight } from \"@fortawesome/free-solid-svg-icons\";\nimport Form from \"react-bootstrap/Form\";\nimport Button from \"react-bootstrap/Button\";\nimport \"../component-css/SignInBox.css\";\n\nfunction SignInBox({ setCurrentUser, users }) {\n  const [userInput, setUserInput] = useState(\"\");\n  const [err, setErr] = useState(false);\n  const history = useHistory();\n\n  console.log(userInput);\n\n  const checkLogIn = (e) => {\n    e.preventDefault();\n    setErr(false);\n    const usernames = users.map((user) => {\n      return user.username;\n    });\n    if (usernames.includes(userInput)) {\n      setCurrentUser(userInput);\n      localStorage.setItem(\"loggedInUser\", userInput);\n      history.push(\"/reviews\");\n    } else {\n      setErr(true);\n    }\n    setUserInput(\"\");\n  };\n\n  const needToSignUp = () => {\n    if (err) {\n      return <p>User not found with entered username, please try again</p>;\n    }\n  };\n\n  return (\n    <section id=\"signin-box\">\n      <p className=\"fadeInDown\" id=\"si-header-logo\">\n        <span id=\"review-logo-left\">Bored?</span> Reviews\n        <FontAwesomeIcon id=\"review-icon\" icon={faChessKnight} />\n      </p>\n      <p id=\"signin-heading\">Welcome </p>\n      <div id=\"msg-container\">\n        <p id=\"signin-msg\">\n          Join the board game community. Review your favourite board games and\n          interact with other board-game addicts.\n        </p>\n      </div>\n      <Form id=\"signin-submit-form\" onSubmit={checkLogIn}>\n        <Form.Control\n          id=\"username\"\n          onChange={(e) => {\n            setUserInput(e.target.value);\n          }}\n          required\n          type=\"text\"\n          placeholder=\"username\"\n          value={userInput}\n        ></Form.Control>\n        <Button id=\"form-submit-btn\" type=\"submit\">\n          Sign-In\n        </Button>\n      </Form>\n      <p id=\"signin-prompt\" className=\"text-muted\">\n        Guest ? username = tickle122\n      </p>\n      <div>{needToSignUp()}</div>\n    </section>\n  );\n}\n\nexport default SignInBox;\n","import SignInBox from \"../element-components/SignInBox\";\n\nfunction SignInPage({ setCurrentUser, users, setUsers }) {\n  return (\n    <section>\n      <SignInBox\n        setCurrentUser={setCurrentUser}\n        users={users}\n        setUsers={setUsers}\n      />\n    </section>\n  );\n}\n\nexport default SignInPage;\n","import { useState } from \"react\";\nimport { postReview } from \"../utils/api\";\nimport { Link } from \"react-router-dom\";\nimport Form from \"react-bootstrap/Form\";\nimport Button from \"react-bootstrap/Button\";\nimport \"../component-css/NewReviewForm.css\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faChessKnight } from \"@fortawesome/free-solid-svg-icons\";\n\nfunction NewReviewForm({ currentUser, categories, setIsLoading }) {\n  const [reviewInput, setReviewInput] = useState({\n    title: \"\",\n    image: \"\",\n    manufacturer: \"\",\n    body: \"\",\n    category: null,\n  });\n  const [submitNewReview, setSubmitNewReview] = useState(false);\n  const [err, setErr] = useState(false);\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    setReviewInput({\n      title: \"\",\n      image: \"\",\n      manufacturer: \"\",\n      body: \"\",\n      category: null,\n    });\n    postReview(reviewInput, currentUser).catch((err) => {\n      setErr(true);\n    });\n    setSubmitNewReview(true);\n  };\n\n  return (\n    <section className=\"NewFormReview\">\n      <p id=\"nr-heading\">Enter you review below</p>\n      <Form disabled={submitNewReview ? true : false} onSubmit={handleSubmit}>\n        <Form.Group>\n          <div id=\"nr-form-container\">\n            <p id=\"nr-brand\">\n              <span id=\"review-logo-left\">Bored?</span> Reviews\n              <FontAwesomeIcon id=\"review-icon\" icon={faChessKnight} />\n            </p>\n            {/* <Form.Label>Review Title</Form.Label> */}\n            <Form.Control\n              placeholder=\"Review Title......\"\n              className=\"pl-10 mb-3\"\n              disabled={submitNewReview ? true : false}\n              onChange={(e) => {\n                setReviewInput((currentInput) => {\n                  const tempInput = { ...currentInput };\n                  tempInput.title = e.target.value;\n                  return tempInput;\n                });\n              }}\n              required\n              type=\"text\"\n              value={reviewInput.title}\n            ></Form.Control>\n            {/* <Form.Label>Image (URL)</Form.Label> */}\n            <Form.Control\n              className=\"pl-10 mb-3\"\n              placeholder=\"Image URL......\"\n              disabled={submitNewReview ? true : false}\n              onChange={(e) => {\n                setReviewInput((currentInput) => {\n                  const tempInput = { ...currentInput };\n                  tempInput.image = e.target.value;\n                  return tempInput;\n                });\n              }}\n              required\n              type=\"text\"\n              value={reviewInput.image}\n            ></Form.Control>\n            {/* <Form.Label>Board Game</Form.Label> */}\n            <Form.Control\n              className=\"pl-10 mb-3\"\n              placeholder=\"Board Game Name......\"\n              disabled={submitNewReview ? true : false}\n              onChange={(e) => {\n                setReviewInput((currentInput) => {\n                  const tempInput = { ...currentInput };\n                  tempInput.manufacturer = e.target.value;\n                  return tempInput;\n                });\n              }}\n              required\n              type=\"text\"\n              value={reviewInput.manufacturer}\n            ></Form.Control>\n            {/* <Form.Label>Review</Form.Label> */}\n            <Form.Control\n              className=\"pl-10 mb-3\"\n              placeholder=\"Review......\"\n              disabled={submitNewReview ? true : false}\n              onChange={(e) => {\n                setReviewInput((currentInput) => {\n                  const tempInput = { ...currentInput };\n                  tempInput.body = e.target.value;\n                  return tempInput;\n                });\n              }}\n              required\n              as=\"textarea\"\n              rows={6}\n              value={reviewInput.body}\n            ></Form.Control>\n            <Form.Select\n              className=\"pl-10 mb-3\"\n              disabled={submitNewReview ? true : false}\n              defaultValue=\"selected\"\n              onChange={(e) => {\n                setReviewInput((currentInput) => {\n                  const tempInput = { ...currentInput };\n                  tempInput.category = e.target.value;\n                  return tempInput;\n                });\n              }}\n              required\n            >\n              <option value=\"selected\" disabled={true}>\n                Select Option\n              </option>\n              {categories.map((category, index) => {\n                return (\n                  <option required key={index}>\n                    {category.slug}\n                  </option>\n                );\n              })}\n            </Form.Select>\n            <Button\n              id=\"new-review-btn\"\n              className=\"mt-20\"\n              type=\"submit\"\n              disabled={submitNewReview ? true : false}\n            >\n              Submit\n            </Button>\n          </div>\n        </Form.Group>\n      </Form>\n      {submitNewReview & !err ? (\n        <div>\n          <img\n            src=\"https://images.unsplash.com/photo-1494178270175-e96de2971df9?ixid=MnwxMjA3fDB8MHxzZWFyY2h8MTB8fHN1Y2Nlc3N8ZW58MHx8MHx8&ixlib=rb-1.2.1&auto=format&fit=crop&w=800&q=60\"\n            alt=\"successful upload\"\n          ></img>\n          <p>{reviewInput.title}</p>\n          <p>\n            Review Submitted - Check it out at{\" \"}\n            <Link href=\"/reviews\">Reviews</Link> or Submit Another{\" \"}\n            <Link\n              onClick={() => {\n                window.location.reload();\n              }}\n            >\n              Review\n            </Link>\n          </p>\n        </div>\n      ) : null}\n    </section>\n  );\n}\n\nexport default NewReviewForm;\n","import NewReviewForm from \"../element-components/NewReviewForm\";\n\nfunction NewReviewPage({ currentUser, categories }) {\n  return (\n    <section id=\"NewReviewPage\">\n      <NewReviewForm currentUser={currentUser} categories={categories} />\n    </section>\n  );\n}\n\nexport default NewReviewPage;\n","import \"./App.css\";\nimport { BrowserRouter, Switch, Route } from \"react-router-dom\";\nimport { useState, useEffect } from \"react\";\nimport NavBar from \"./element-components/NavBar\";\nimport CategoryBar from \"./element-components/CategoryBar\";\nimport CommentsPage from \"./page-components/CommentsPage\";\nimport ReviewsPage from \"./page-components/ReviewsPage\";\nimport SignInPage from \"./page-components/SignInPage\";\nimport NewReviewPage from \"./page-components/NewReviewPage\";\nimport { getUsers, getCategories } from \"./utils/api\";\n\nfunction App() {\n  const [currentUser, setCurrentUser] = useState(\"\");\n  const [categories, setCategories] = useState([]);\n  const [users, setUsers] = useState([]);\n\n  useEffect(() => {\n    getCategories().then((results) => {\n      setCategories(results);\n    });\n  }, [setCategories]);\n\n  useEffect(() => {\n    getUsers().then((results) => {\n      return setUsers(results);\n    });\n  }, []);\n\n  useEffect(() => {\n    const prevLoggedInUser = localStorage.getItem(\"loggedInUser\");\n    if (prevLoggedInUser) {\n      setCurrentUser(prevLoggedInUser);\n    }\n  }, []);\n\n  return (\n    <BrowserRouter>\n      <div>\n        <Switch>\n          <Route exact path=\"/\">\n            <SignInPage\n              setCurrentUser={setCurrentUser}\n              users={users}\n              setUsers={setUsers}\n            />\n          </Route>\n          <Route exact path=\"/reviews/\">\n            <NavBar />\n            <CategoryBar\n              currentUser={currentUser}\n              users={users}\n              categories={categories}\n            />\n            <ReviewsPage currentUser={currentUser} />\n          </Route>\n          <Route exact path=\"/reviews/:category\">\n            <NavBar />\n            <CategoryBar\n              currentUser={currentUser}\n              users={users}\n              categories={categories}\n            />\n            <ReviewsPage currentUser={currentUser} />\n          </Route>\n          <Route exact path=\"/comments/:review_id\">\n            <NavBar />\n            <CategoryBar\n              users={users}\n              currentUser={currentUser}\n              categories={categories}\n            />\n            <CommentsPage currentUser={currentUser} categories={categories} />\n          </Route>\n          <Route exact path=\"/newreview\">\n            <NavBar />\n            <NewReviewPage categories={categories} currentUser={currentUser} />\n          </Route>\n        </Switch>\n      </div>\n    </BrowserRouter>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport \"font-awesome/css/font-awesome.min.css\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n"],"sourceRoot":""}